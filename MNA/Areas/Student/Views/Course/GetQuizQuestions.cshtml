@model List<Question>

@{
    ViewData["Title"] = "Quiz";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

<div class="container bg-light mt-5">
    <div class="card shadow-lg p-4">
        <h2 class="text-center mb-4">Quiz</h2>

        @if (Model.Any())
        {
            <div id="quiz-container">
                @for (int i = 0; i < Model.Count; i++)
                {
                    <div class="question" id="question-@i" style="display: @(i == 0 ? "block" : "none");">
                        <h5>@(i + 1). @Model[i].QuestionText</h5>
                        <div class="form-check mt-3">
                            <input class="form-check-input" type="radio" name="answer-@i" value="true">
                            <label class="form-check-label">True</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="answer-@i" value="false">
                            <label class="form-check-label">False</label>
                        </div>
                        <input type="hidden" id="correct-answer-@i" value="@Model[i].CorrectAnswer.ToString().ToLower()" />
                    </div>
                }
            </div>

            <div class="d-flex justify-content-between mt-4">
                <button class="btn btn-secondary" id="prev-btn" onclick="prevQuestion()" disabled>Previous</button>
                <button class="btn btn-primary" id="next-btn" onclick="nextQuestion()">Next</button>
                <button class="btn btn-success d-none" id="submit-btn" onclick="submitQuiz(@Model.First().Quiz.LessonId)">Finish Exam</button>
            </div>
        }
        else
        {
            <p class="text-center text-danger">No questions available for this quiz.</p>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    let currentQuestion = 0;
    let totalQuestions = @Model.Count;
    showQuestion(currentQuestion)
    const CrsId = @Model.First().Quiz.Lesson.Section.CourseId;
    function showQuestion(index) {
        document.querySelectorAll('.question').forEach(q => q.style.display = 'none');
        document.getElementById('question-' + index).style.display = 'block';

        document.getElementById('prev-btn').disabled = index === 0;
        document.getElementById('next-btn').classList.toggle('d-none', index == totalQuestions - 1);
        document.getElementById('submit-btn').classList.toggle('d-none', index !== totalQuestions - 1);
    }

    function nextQuestion() {
        if (currentQuestion < totalQuestions - 1) {
            currentQuestion++;
            showQuestion(currentQuestion);
        }
    }

    function prevQuestion() {
        if (currentQuestion > 0) {
            currentQuestion--;
            showQuestion(currentQuestion);
        }
    }

    function submitQuiz(lessonId) {
        let score = 0;

        for (let i = 0; i < totalQuestions; i++) {
            let selectedAnswer = document.querySelector(`input[name="answer-${i}"]:checked`);
            let correctAnswer = document.getElementById(`correct-answer-${i}`).value;

            if (selectedAnswer && selectedAnswer.value === correctAnswer) {
                score++;
            }
        }

        
        $.ajax({
            url: "/student/Course/SubmitQuiz",
            type: "POST",
            data: { lessonId: lessonId, marks: score , totalMarks : totalQuestions },
            success: function(response) {
                if (response.success) {
                    alert(`Quiz submitted! Your score: ${score}/${totalQuestions}`);
                    window.location.href = `/student/Course/showCourse/${CrsId}`;
                }
            },
            error: function() {
                alert("Error submitting quiz. Please try again.");
            }
        });
    }
</script>
