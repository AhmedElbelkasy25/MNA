@model Models.Quiz

@{
    ViewData["Title"] = "Edit Quiz";
}

<h1 class="text-center mb-4" style="color: #007bff; text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.5); font-weight: bold;">
    <i class="bi bi-pencil-square"></i> Edit Quiz
</h1>

<div class="container d-flex justify-content-center">
    <div class="card shadow-lg border-0 rounded-4 p-4 w-75">
        <div class="card-body">
            <form asp-action="Edit" asp-route-id="@Model.Id" id="quizForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" />

                <!-- Lesson Selection -->
                <div class="form-group">
                    <label asp-for="LessonId" class="form-label fw-bold">
                        <i class="bi bi-book"></i> Select Lesson
                    </label>
                    <select asp-for="LessonId" class="form-control">
                        @foreach (var item in ViewBag.lessons)
                        {
                            <option value="@item.Id">@item.Title</option>
                        }
                    </select>
                    <span asp-validation-for="LessonId" class="text-danger"></span>
                </div>

                <!-- Dynamic Questions List -->
                <div id="questionsContainer">
                    @for (int i = 0; i < Model.Questions.Count; i++)
                    {
                        <div class="question-group">
                            <input type="hidden" asp-for="Questions[i].Id" />
                            <div class="form-group mb-3">
                                <label class="form-label fw-bold">
                                    <i class="bi bi-chat-square-text"></i> Question
                                </label>
                                <input asp-for="Questions[i].QuestionText" class="form-control" placeholder="Enter quiz question..." required />
                            </div>

                            <div class="form-group mb-3">
                                <label class="form-label fw-bold">
                                    <i class="bi bi-check2-circle"></i> Correct Answer
                                </label>
                                <div class="d-flex gap-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio"
                                               asp-for="Questions[i].CorrectAnswer"
                                               value="true" required>
                                        <label class="form-check-label fw-bold text-success">✅ True</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio"
                                               asp-for="Questions[i].CorrectAnswer"
                                               value="false" required>
                                        <label class="form-check-label fw-bold text-danger">❌ False</label>
                                    </div>
                                </div>
                            </div>

                            <button type="button" class="btn btn-danger btn-sm remove-question">
                                <i class="bi bi-trash"></i> Remove Question
                            </button>
                            <hr />
                        </div>
                    }
                </div>

                <button type="button" class="btn btn-outline-success rounded-pill px-4" id="addQuestion">
                    <i class="bi bi-plus-circle"></i> Add Another Question
                </button>

                <div class="d-flex justify-content-between mt-4">
                    <a asp-action="Index" class="btn btn-outline-secondary rounded-pill px-4">
                        <i class="bi bi-arrow-left"></i> Back
                    </a>
                    <button type="submit" class="btn btn-primary rounded-pill px-4 shadow">
                        <i class="bi bi-check-circle"></i> Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let questionCount = @Model.Questions.Count;
            const container = document.getElementById("questionsContainer");
            const addButton = document.getElementById("addQuestion");

            addButton.addEventListener("click", function () {
                addNewQuestion();
            });

            function addNewQuestion() {
                const newQuestion = document.createElement("div");
                newQuestion.classList.add("question-group");
                newQuestion.innerHTML = `
                    <input type="hidden" name="Questions[${questionCount}].Id" value="0" />
                    <div class="form-group mb-3">
                        <label class="form-label fw-bold">
                            <i class="bi bi-chat-square-text"></i> Question
                        </label>
                        <input name="Questions[${questionCount}].QuestionText" class="form-control" placeholder="Enter quiz question..." required />
                    </div>
                    <div class="form-group mb-3">
                        <label class="form-label fw-bold">
                            <i class="bi bi-check2-circle"></i> Correct Answer
                        </label>
                        <div class="d-flex gap-3">
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="Questions[${questionCount}].CorrectAnswer" value="true" required>
                                <label class="form-check-label fw-bold text-success">✅ True</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="Questions[${questionCount}].CorrectAnswer" value="false" required>
                                <label class="form-check-label fw-bold text-danger">❌ False</label>
                            </div>
                        </div>
                    </div>
                    <button type="button" class="btn btn-danger btn-sm remove-question">
                        <i class="bi bi-trash"></i> Remove Question
                    </button>
                    <hr />
                `;

                container.appendChild(newQuestion);
                questionCount++;

                newQuestion.querySelector(".remove-question").addEventListener("click", function () {
                    newQuestion.remove();
                    updateQuestionIndices();
                });

                updateQuestionIndices();
            }

            function updateQuestionIndices() {
                const questions = container.querySelectorAll(".question-group");
                questions.forEach((question, index) => {
                    // Update all fields
                    const inputs = question.querySelectorAll('input, hidden');
                    inputs.forEach(input => {
                        const name = input.name.replace(/\[\d+\]/, `[${index}]`);
                        input.name = name;
                    });
                });
                questionCount = questions.length;
            }

            // Initialize remove handlers for existing questions
            container.querySelectorAll('.remove-question').forEach(button => {
                button.addEventListener('click', function() {
                    this.closest('.question-group').remove();
                    updateQuestionIndices();
                });
            });
        });
    </script>
}