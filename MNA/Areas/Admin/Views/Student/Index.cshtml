@using Microsoft.AspNetCore.Identity
@using Models;
@inject UserManager<ApplicationUser> userManager
@model IEnumerable<Models.ApplicationUser>

@section Scripts {
    @if (@TempData["success"] != null)
    {
        <script>
            toastr.success('@TempData["success"]')
        </script>
    }
    @if (TempData["error"] != null)
    {
        <script>
            toastr.error('@TempData["error"]')
        </script>
    }
}

@{
    ViewData["Title"] = "User Management";
}

<!-- Page Title -->
<h3 class="text-center mb-5" style="color: #007bff; text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);">
    <i class="bi bi-person-circle"></i> All Users
</h3>

<!-- Search Form -->
<div class="text-center mb-4">
    <form asp-action="SearchForUser" asp-controller="Student" method="post" class="d-inline-flex">
        <input  type="text" class="form-control rounded " placeholder="Search by User Name or Email" name="account" />
        <button type="submit" class="btn rounded-3 btn-info ms-2">Search</button>
    </form>
</div>


<table class="table table-striped">
    <thead>
        <tr>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th class ="text-center">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Email)
            </th>


            <th class="text-center">  block | unblock </th>
            <th class="text-center"> Role</th>
            <th></th>
        </tr>
    </thead>
    <tbody >
        @foreach(var std in Model)
        {
            var role = await userManager.GetRolesAsync(std);
            <tr>
                @* <th scope="row">@std.Id</th> *@
                <td class="text-center">@std.Name</td>
            <td class="text-center">@std.UserName</td>
                <td class="text-center">@std.Email</td>

                <td class="text-center">
                    @if ((bool)std.IsLocked)
                    {
                        <a class="btn rounded btn-outline-info" href="/Admin/student/unblockUser?UserId=@std.Id">UnBlock</a>
                    }
                    else
                    {

                        <a class="btn rounded btn-outline-danger" href="/Admin/student/blockUser?UserId=@std.Id">Block</a>
                    }

                </td>
                <td class="text-center">
                    @string.Join(" ", role)

                </td>
                <td class="text-center">
                    <a href="/Admin/student/AddToRole?userId=@std.Id" class="btn rounded btn-outline-success"> ADD to Role</a>
                </td>

               
            </tr>
        }
        
    </tbody>
</table>






<!-- Optional Styling for Equal Spacing and Vibrant Colors -->
<style>
    .card {
        transition: transform 0.3s ease-in-out;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

        .card:hover {
            transform: scale(1.05);
        }

    .badge {
        font-size: 1rem;
        padding: 0.5rem 1rem;
    }

    .btn-sm {
        font-size: 0.875rem;
        padding: 0.375rem 0.75rem;
    }

    .container {
        margin-top: 20px;
    }

    /* Equal Spacing between cards */
    .row {
        display: flex;
        justify-content: space-between;
    }

    /* Color Scheme Updates */
    .btn-outline-primary {
        border-color: #007bff;
        color: #007bff;
    }

        .btn-outline-primary:hover {
            background-color: #007bff;
            color: #fff;
        }

    .btn-outline-warning {
        border-color: #ffc107;
        color: #ffc107;
    }

        .btn-outline-warning:hover {
            background-color: #ffc107;
            color: #fff;
        }

    .btn-outline-danger {
        border-color: #dc3545;
        color: #dc3545;
    }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: #fff;
        }

    .btn-outline-success {
        border-color: #28a745;
        color: #28a745;
    }

        .btn-outline-success:hover {
            background-color: #28a745;
            color: #fff;
        }
</style>
